[tool.poetry]
name = "lib-avstack-core"
version = "0.1.0-alpha.1"
description = "Core library for autonomous vehicle development"
authors = ["Spencer Hallyburton <spencer.hallyburton@duke.edu>"]
readme = "README.md"
license = "MIT"
homepage = "https://avstack.org"
repository = "https://github.com/avstack-lab/lib-avstack-core"
keywords = ["self-driving", "autonomy", "perception", "planning", "control"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
]
packages = [{include = "avstack"}]
include = ["CHANGELOG.md"]

[tool.poetry.dependencies]
python = "~3.10"
addict = "~2.4.0"
numpy = ">=1.20, <1.24"
filterpy = "^1"
scipy = "^1.9"
cython = "^0.29"
numpy-quaternion = "^2022.4"
numba = "~0.57.1"
seaborn = "~0.12.2"
Pillow = "^9"
opencv-python = ">=4.3, <4.7"
tqdm = "^4"

# percep dependencies
albumentations = {version="~1.3.1", optional=true}
scikit-learn = {version="^1.1", optional=true}
torch = {url="https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp310-cp310-linux_x86_64.whl", optional=true}
torchvision = {url="https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp310-cp310-linux_x86_64.whl", optional=true}
mmcv = {url="https://g-b0ef78.1d0d8d.03c0.data.globus.org/packages/mmcv/torch1.13.1_cu11.7/mmcv-2.0.1-cp310-cp310-linux_x86_64.whl", optional=true}
mmengine = {version="^0.7.3", optional=true}
mmsegmentation = {path="./third_party/mmsegmentation", develop=true, optional=true}
mmdet = {path="./third_party/mmdetection/", develop=true, optional=true}
mmdet3d = {path="./third_party/mmdetection3d/", develop=true, optional=true}
midas = {path="./third_party/MiDaS/", develop=true , optional=true}

# serve dependencies
torchserve = {version="~0.8.2", optional=true}
torch-model-archiver = {version="~0.8.2", optional=true}
torch-workflow-archiver = {version="~0.2.10", optional=true}
nvgpu = {version="~0.10.0", optional=true}
mmdeploy-runtime-gpu = {version="^1.2.0", optional=true}
mmdeploy = {version="^1.2.0", optional=true}
onnxruntime-gpu = {version="~1.15.1", optional=true}
tensorrt = {version="~8.5.3.1", optional=true}  # NOTE: to appropriately use, we need to download the same version tar package manually
nvidia-cudnn-cu11 = {version="8.9.4.25", optional=true}

[tool.poetry.extras]
percep = ["scikit-learn", "albumentations", "torch", "torchvision", "mmcv", "mmengine", "mmsegmentation", "mmdet", "mmdet3d", "midas"]
serve = ["torchserve", "torch-model-archiver", "torch-workflow-archiver", "nvgpu", "mmdeploy-runtime-gpu", "mmdeploy", "onnxruntime-gpu", "tensorrt", "nvidia-cudnn-cu11"]

[tool.poetry.group.docs.dependencies]
mkdocstrings-python = "^0.8.3"
mkdocs-material = "^9.0"

[tool.poetry.group.test.dependencies]
pytest = "^7"
pytest-cov = "^4"
bandit = "^1.7"
black = "~22.12.0"
mypy = "^0"
isort = "^5.11"
flake8 = "^5.0"
autoflake = "^1"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -s"
testpaths = [
    "tests",
    "integration",
]

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"
